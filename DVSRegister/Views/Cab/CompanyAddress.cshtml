@model DVSRegister.Models.CAB.CertificateInfoSummaryViewModel
@{
    ViewData["Title"] = "Company Address";
    Layout = "~/Views/Shared/_LayoutLoggedIn.cshtml";
}
@{
    bool isValid = true;
}
@using (Html.BeginForm("CompanyAddressValidation", "Cab", FormMethod.Post))
{
    @Html.HiddenFor(m => m.FromSummaryPage, new { @Value = ViewBag.fromSummaryPage })
    <div class="govuk-width-container">
        @Html.ActionLink("Back", "WebsiteAddress", "Cab", null, new { @class = "govuk-back-link" })
        <main class="govuk-main-wrapper">
            <div class="govuk-grid-row">
                <div class="govuk-grid-column-two-thirds">
                    <h1 class="govuk-heading-xl"> Company address details </h1>
                    @if (Html.ViewData?.ModelState.ContainsKey("Address") == true && Html.ViewData.ModelState["Address"].Errors.Count > 0)
                    {
                        isValid = false;
                        ViewData["Title"] = "Error: " + ViewData["Title"];
                        @await Html.PartialAsync("~/Views/PartialViews/_SpecificErrorsView.cshtml",
                                 new Tuple<string, IEnumerable<Microsoft.AspNetCore.Mvc.ModelBinding.ModelError>>("Address", Html.ViewData.ModelState["Address"]?.Errors))
                    }
                    <p class="govuk-body">This address must match the address that appears on the certificate of conformity.</p>

                    @if (!isValid)
                    {
                        <div class="govuk-form-group govuk-form-group--error">
                            <h1 class="govuk-label-wrapper">
                                <label class="govuk-label govuk-label--l" for="address">
                                    What is your address?
                                </label>
                            </h1>
                            <p id="address-error" class="govuk-error-message">
                                <span class="govuk-visually-hidden">Error:</span> @Html.ValidationMessageFor(m => m.Address, "", new { @class = "govuk-error-message" })
                            </p>
                            @Html.TextAreaFor(m => m.Address, 5, 20, new { @class = "govuk-textarea govuk-textarea--error", id = "address", name = "address-name", aria_describedby = "address-error" })
                           
                        </div>
                    }
                    else
                    {
                        <div class="govuk-form-group">
                            <h1 class="govuk-label-wrapper">
                                <label class="govuk-label govuk-label--l" for="address">
                                    What is your address?
                                </label>
                            </h1>
                            @Html.TextAreaFor(m => m.Address, 5, 20, new { @class = "govuk-textarea", id = "address", name = "address-name" })
                        </div>
                    }


                    <button type="submit" class="govuk-button" data-module="govuk-button">
                        Continue
                    </button>
                </div>
            </div>
        </main>
    </div>
}
