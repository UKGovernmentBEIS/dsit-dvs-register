@model DVSRegister.Models.CAB.CertificateInfoSummaryViewModel
@{
    ViewData["Title"] = "HasSupplementaryScheme";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm("SaveHasSupplementaryScheme", "Cab", FormMethod.Post))
{
    @Html.HiddenFor(m => m.FromSummaryPage, new { @Value = ViewBag.fromSummaryPage })
    <div class="govuk-width-container">
        @Html.ActionLink("Back", "SelectIdentityProfiles", "Cab", null, new { @class = "govuk-back-link" })
        <main class="govuk-main-wrapper">
            <div class="govuk-grid-row">
                <div class="govuk-grid-column-two-thirds">
                    <h1 class="govuk-heading-xl form-title">Is the service provider certified against any supplementary schemes on their certificate?
                    </h1>
                    @if (Html.ViewData?.ModelState.ContainsKey("HasSupplementarySchemes") == true && Html.ViewData.ModelState["HasSupplementarySchemes"].Errors.Count > 0)
                    {
                        @await Html.PartialAsync("~/Views/PartialViews/_SpecificErrorsView.cshtml",
                                 new Tuple<string, IEnumerable<Microsoft.AspNetCore.Mvc.ModelBinding.ModelError>>("RegisteredName", Html.ViewData.ModelState["HasSupplementarySchemes"]?.Errors))

                    }
                    <div class="govuk-form-group @(Html.ViewData.ModelState.ContainsKey("HasSupplementarySchemes") && Html.ViewData.ModelState["HasSupplementarySchemes"].Errors.Count > 0 ? "govuk-form-group--error" : "")">
                        <fieldset class="govuk-fieldset" aria-describedby="hassupplementaryschemes-hint">

                            @Html.ValidationMessageFor(m => m.HasSupplementarySchemes, "", new { @class = "govuk-error-message", id = "hassupplementaryschemes-error" })
                            <div class="govuk-radios" data-module="govuk-radios">
                                <div class="govuk-radios__item">
                                    @Html.RadioButtonFor(m => m.HasSupplementarySchemes, true, new { @id = "hassupplementaryschemes-yes", @class = "govuk-radios__input" })
                                    <label class="govuk-label govuk-radios__label" for="hassupplementaryschemes-yes">
                                        Yes
                                    </label>
                                </div>
                                <div class="govuk-radios__item">
                                    @Html.RadioButtonFor(m => m.HasSupplementarySchemes, false, new { @id = "hassupplementaryschemes-no", @class = "govuk-radios__input" })
                                    <label class="govuk-label govuk-radios__label" for="hassupplementaryschemes-no">
                                        No
                                    </label>
                                </div>
                            </div>
                        </fieldset>
                    </div>
                    <button type="submit" class="govuk-button govuk-!-margin-top-2">Continue</button>
                </div>
            </div>
        </main>
    </div>
}

