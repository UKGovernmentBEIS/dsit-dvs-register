@model DVSRegister.Models.CAB.RoleViewModel
@using Newtonsoft.Json
@{
    ViewData["Title"] = "SelectRoles";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="govuk-width-container">
    @Html.ActionLink("Back", "", "Cab", null, new { @class = "govuk-back-link" })
    <main class="govuk-main-wrapper">
        <div class="govuk-grid-row">
            <div class="govuk-grid-column-two-thirds">
                <h1 class="govuk-heading-xl">
                    Select the role(s) from the UK digital identity and attributes trust framework that apply to the provider's service
                </h1>
                @using (Html.BeginForm("SaveRoles", "Cab", FormMethod.Post))
                {
                    @if (ViewData.ModelState.ErrorCount >0)
                    {
                        @await Html.PartialAsync("~/Views/PartialViews/_ErrorSummaryView.cshtml", Model)
                    }
                    @Html.HiddenFor(m => m.FromSummaryPage, new { @Value = ViewBag.fromSummaryPage })
                    <p class="govuk-body">
                        This must match the information on the certificate
                    </p>
                    <div class="govuk-form-group @(Html.ViewData.ModelState.ContainsKey("SelectedRoleIds") && Html.ViewData.ModelState["SelectedRoleIds"].Errors.Count > 0 ? "govuk-form-group--error" : "")">
                        <fieldset class="govuk-fieldset">
                            <legend class="govuk-fieldset__legend govuk-fieldset__legend--s">                              
                                <h1 class="govuk-fieldset__heading">
                                    Select the role(s)
                                </h1>
                            </legend>
                            <div id="role-hint" class="govuk-hint">
                                Select all that apply
                            </div>
                            @Html.ValidationMessageFor(m => m.SelectedRoleIds, "", new { @class = "govuk-error-message", id = "selectedroleids-error" })
                            <div class="govuk-checkboxes" data-module="govuk-checkboxes">
                                @foreach (var role in Model.AvailableRoles)
                                {   
                                    <div class="govuk-checkboxes__item">
                                        <input class="govuk-checkboxes__input" type="checkbox" name="SelectedRoleIds" value="@role.Id" id="role_@role.Id"
                                        @(Model.SelectedRoleIds.Contains(role.Id) ? "checked" : "") />
                                        <label class="govuk-label govuk-checkboxes__label" for="role_@role.Id">@role.RoleName</label>
                                    </div>
                                }
                                </div>
                          
                        </fieldset>
                    </div>
                    @*DONOT Remove : Keeping AvailableRoles hidden variable to avoid db call to fetch countries after post*@
                    @Html.Hidden("AvailableRoles", JsonConvert.SerializeObject(Model.AvailableRoles))
                    <button type="submit" class="govuk-button govuk-!-margin-top-6" data-module="govuk-button">
                        Continue
                    </button>
                }
            </div>
        </div>
    </main>
</div>

