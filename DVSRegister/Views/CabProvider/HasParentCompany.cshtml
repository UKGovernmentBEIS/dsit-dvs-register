@model DVSRegister.Models.CAB.ProfileSummaryViewModel
@using DVSRegister.Models.UI.Enums
@{
    ViewData["Title"] = "Does the digital identity and attribute service provider have a parent company outside UK?";
    Layout = "~/Views/Shared/_Layout_CAB.cshtml";
}
@{
    bool hasError = false;
}

@using (Html.BeginForm("SaveHasParentCompany", "CabProvider", FormMethod.Post))
{
    @Html.HiddenFor(m => m.FromSummaryPage, new { @Value = ViewBag.fromSummaryPage })

    <div class="govuk-width-container">
        @if(Convert.ToBoolean(Model.HasRegistrationNumber))
        {
            @Html.ActionLink("Back", "CompanyRegistrationNumber", "CabProvider", null, new { @class = "govuk-back-link" })
        }
        else
        {
            @Html.ActionLink("Back", "DUNSNumber", "CabProvider", null, new { @class = "govuk-back-link" })
        }

        <main class="govuk-main-wrapper">
            <div class="govuk-grid-row">
                <div class="govuk-grid-column-two-thirds">

                    @if (Html.ViewData?.ModelState.ContainsKey("HasParentCompany") == true && Html.ViewData.ModelState["HasParentCompany"].Errors.Count > 0)
                    {
                        hasError = true;
                        ViewData["Title"] = "Error: " + ViewData["Title"];
                        @await Html.PartialAsync("~/Views/PartialViews/_SpecificErrorsView.cshtml",
                                 new Tuple<string, IEnumerable<Microsoft.AspNetCore.Mvc.ModelBinding.ModelError>>("HasParentCompany", Html.ViewData.ModelState["HasParentCompany"]?.Errors))

                    }

                    @await Html.PartialAsync("~/Views/PartialViews/_TwoRadioButtonGroupView.cshtml", new TwoRadioButtonGroupViewModel
                   {
                       PropertyName = "HasParentCompany",
                       Value = Model.HasParentCompany,
                       HasError = hasError,
                       FieldSet = "Does the digital identity and attribute service provider have a parent company outside the UK?",
                       Heading = HeadingEnum.H1,
                       LegendStyleClass = "govuk-fieldset__legend--xl",
                       ErrorMessage = hasError ?
                       Html.ViewData.ModelState["HasParentCompany"].Errors[0].ErrorMessage : string.Empty,
                       Label1 = "Yes",
                       Label2 = "No"
                   })

                    <button type="submit" class="govuk-button govuk-!-margin-top-2">Continue</button>
                </div>
            </div>
        </main>
    </div>
}

