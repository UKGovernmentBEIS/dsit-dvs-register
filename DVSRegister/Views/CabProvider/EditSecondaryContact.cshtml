@model DVSRegister.Models.CAB.SecondaryContactViewModel
@{
    ViewData["Title"] = "Change secondary contact details";
    Layout = "~/Views/Shared/_LayoutLoggedIn.cshtml";
}

@{
    bool hasError = false;
}

<div class="govuk-width-container">
    @*@Html.ActionLink("Back", "ProviderOverview", "Cab", new { providerId = Model.Id}, new { @class = "govuk-back-link" })*@
    <main id="main-content" class="govuk-main-wrapper" role="main">
        <div class="govuk-grid-row">
            <div class="govuk-grid-column-two-thirds">

                @if (ViewData.ModelState.ErrorCount > 0)
                {

                    ViewData["Title"] = "Error: " + ViewData["Title"];
                    @await Html.PartialAsync("~/Views/PartialViews/_ErrorSummaryView.cshtml", Model)
                }

                <h1 class="govuk-heading-xl">
                    Change secondary contact details
                </h1>

                @{
                    bool fullNameHasError = Html.ViewData.ModelState.ContainsKey("SecondaryContactFullName")
                    && Html?.ViewData?.ModelState["SecondaryContactFullName"]?.Errors.Count > 0;
                    var SecondaryContactFullName = new TextBoxViewModel
            {
                PropertyName = "SecondaryContactFullName",
                Label = "Full name of secondary contact",
                Value = Model?.SecondaryContactFullName ?? string.Empty,
                Class = "govuk-input govuk-!-width-three-quarters",
                HasError = fullNameHasError,
                ErrorMessage = fullNameHasError ? Html?.ViewData?.ModelState["SecondaryContactFullName"]?.Errors[0].ErrorMessage ?? string.Empty : string.Empty,
            };
                }

                @await Html.PartialAsync("~/Views/PartialViews/_TextBoxView.cshtml", SecondaryContactFullName)

                @{
                    bool jobTitleHasError = Html.ViewData.ModelState.ContainsKey("SecondaryContactJobTitle")
                    && Html?.ViewData?.ModelState["SecondaryContactJobTitle"]?.Errors.Count > 0;

                    var SecondaryContactJobTitle = new TextBoxViewModel
            {
                PropertyName = "SecondaryContactJobTitle",
                Label = "Job title of secondary contact",
                Value = Model?.SecondaryContactJobTitle ?? string.Empty,
                Class = "govuk-input govuk-!-width-three-quarters",
                HasError = jobTitleHasError,
                ErrorMessage = jobTitleHasError ? Html?.ViewData?.ModelState["SecondaryContactJobTitle"]?.Errors[0].ErrorMessage ?? string.Empty : string.Empty,
            };
                }

                @await Html.PartialAsync("~/Views/PartialViews/_TextBoxView.cshtml", SecondaryContactJobTitle)



                @{
                    bool emailHasError = Html.ViewData.ModelState.ContainsKey("SecondaryContactEmail")
                    && Html?.ViewData?.ModelState["SecondaryContactEmail"]?.Errors.Count > 0;
                    var SecondaryContactEmail = new TextBoxViewModel
            {
                PropertyName = "SecondaryContactEmail",
                Label = "Email address of secondary contact",
                Value = Model?.SecondaryContactEmail ?? string.Empty,
                TextBoxType = "email",
                Class = "govuk-input govuk-!-width-three-quarters",
                HasError = emailHasError,
                ErrorMessage = emailHasError ? Html.ViewData?.ModelState["SecondaryContactEmail"]?.Errors[0].ErrorMessage ?? string.Empty : string.Empty,
            };
                }

                @await Html.PartialAsync("~/Views/PartialViews/_TextBoxView.cshtml", SecondaryContactEmail)


                @{
                    bool phoneNumberHasError = Html.ViewData.ModelState.ContainsKey("SecondaryContactTelephoneNumber")
                    && Html?.ViewData?.ModelState["SecondaryContactTelephoneNumber"]?.Errors.Count > 0;
                    var SecondaryContactTelephoneNumber = new TextBoxViewModel
            {
                PropertyName = "SecondaryContactTelephoneNumber",
                Label = "Telephone number of secondary contact",
                Value = Model?.SecondaryContactTelephoneNumber ?? string.Empty,
                Class = "govuk-input govuk-!-width-one-half",
                Hint = "For international numbers include the country code",
                HasError = phoneNumberHasError,
                ErrorMessage = phoneNumberHasError ? Html.ViewData?.ModelState["SecondaryContactTelephoneNumber"]?.Errors[0].ErrorMessage ?? string.Empty : string.Empty,
            };
                }

                @await Html.PartialAsync("~/Views/PartialViews/_TextBoxView.cshtml", SecondaryContactTelephoneNumber)

                <div class="govuk-button-group">
                    <button type="submit" class="govuk-button" data-module="govuk-button">
                        Change
                    </button>
                    <a class="govuk-link" href="#">Cancel</a>
                </div>

            </div>
        </div>
    </main>
</div>

