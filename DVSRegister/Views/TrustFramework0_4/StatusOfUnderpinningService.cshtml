@using DVSRegister.Models.UI.Enums
@using Microsoft.AspNetCore.Mvc.TagHelpers
@model DVSRegister.Models.CAB.ServiceSummaryViewModel

@{
    ViewData["Title"] = "White-labelled service";
    Layout = "~/Views/Shared/_LayoutLoggedIn.cshtml";
    bool hasError = false;
}

<div class="govuk-width-container">
    @Html.ActionLink("Back", "SelectServiceType", "TrustFramework0_4", null, new { @class = "govuk-back-link" })
    <main id="main-content" class="govuk-main-wrapper" role="main">
        <div class="govuk-grid-row">
            <div class="govuk-grid-column-two-thirds">
                <h1 class="govuk-heading-xl">@ViewData["Title"]</h1>

                @if (Html.ViewData?.ModelState.ContainsKey("IsUnderpinningServicePublished") == true)
                {
                    hasError = true;
                    var errors = Html.ViewData?.ModelState["IsUnderpinningServicePublished"]?.Errors;
                    if (errors != null && errors.Count > 0)
                    {
                        hasError = true;
                        ViewData["Title"] = "Error: " + ViewData["Title"];
                        @await Html.PartialAsync("~/Views/PartialViews/_SpecificErrorsView.cshtml",
                        new Tuple<string, IEnumerable<Microsoft.AspNetCore.Mvc.ModelBinding.ModelError>>("IsUnderpinningServicePublished", errors))
                                }

                }

                @using (Html.BeginForm("StatusOfUnderpinningService", "TrustFramework0_4", FormMethod.Post))
                {
                    @Html.HiddenFor(m => m.FromSummaryPage, new { @Value = ViewBag.fromSummaryPage })
                    @Html.HiddenFor(m => m.FromDetailsPage, new { @Value = ViewBag.fromDetailsPage })
                    @Html.HiddenFor(m => m.RefererURL)

                    @await Html.PartialAsync("~/Views/PartialViews/_TwoRadioButtonGroupView.cshtml", new TwoRadioButtonGroupViewModel
                    {
                        PropertyName = "IsUnderpinningServicePublished",
                                Value = Model.IsUnderpinningServicePublished,
                                HasError = hasError,
                                FieldSet = "Status of the underpinning service",
                                Hint1 = "You have told us that this service is a white-labelled service that relies on another underpinning service.",
                                Hint2 = "Tell us whether the underpinning service appears on the register of digital identity and attributes services.",
                                Heading = HeadingEnum.H2,
                                LegendStyleClass = "govuk-fieldset__legend--m",
                                ErrorMessage = hasError ? Html.ViewData?.ModelState["IsUnderpinningServicePublished"]?.Errors[0].ErrorMessage ?? string.Empty : string.Empty,
                                Label1 = "The underpinning service is published on the register",
                                Label2 = "The underpinning service is certified but not published on the register"
                                })


                @if (Model != null && Model.IsAmendment)
                    {
                        <div class="govuk-button-group">
                            <button type="submit" class="govuk-button govuk-!-margin-top-2" name="action" value="amend">Save changes</button>
                            <a href="@Model.RefererURL" class="govuk-button govuk-button--secondary" role="button" draggable="false" data-module="govuk-button">
                                Cancel
                            </a>
                        </div>
                    }
                else
                    {
                        <div class="govuk-button-group">
                            <button type="submit" class="govuk-button govuk-!-margin-top-6" data-module="govuk-button" name="action" value="continue">
                                Continue
                            </button>
                            <button type="submit" role="link" class="govuk-button govuk-button--secondary" name="action" value="draft">  Save and complete later </button>
                        </div>
                    }
                }
            </div>
        </div>
    </main>
</div>