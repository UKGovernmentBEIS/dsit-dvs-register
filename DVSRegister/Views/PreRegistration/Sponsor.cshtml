@model DVSRegister.Models.SponsorViewModel
@{
    ViewData["Title"] = "Sponsor";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


@using (Html.BeginForm("SaveSponsor", "PreRegistration", FormMethod.Post))
{
    @Html.HiddenFor(m => m.FromSummaryPage, new { @Value = ViewBag.fromSummaryPage })
    <div class="govuk-width-container">
        @Html.ActionLink("Back", "SelectApplicationSponsor", "PreRegistration", null, new { @class = "govuk-back-link" })
        <main class="govuk-main-wrapper">
            <div class="govuk-grid-row">
                <div class="govuk-grid-column-two-thirds">
                    <span class="govuk-caption-l">Page 2 of 5</span>
                    <h1 class="govuk-heading-xl form-title">Provide contact details of the application sponsor</h1>

                    <details class="govuk-details">
                        <summary class="govuk-details__summary">
                            <span class="govuk-details__summary-text">
                                Who is the application sponsor
                            </span>
                        </summary>
                        <div class="govuk-details__text">
                            @*ToDo - Add Details Text*@
                        </div>
                    </details>

                    <div class="govuk-form-group">
                        <h2 class="govuk-heading-m">You confirmed that you are completing the application on behalf of the application sponsor</h2>
                        <span class="govuk-caption-l">Please provide both your and their details</span>
                    </div>

                    <div class="govuk-form-group @(Html.ViewData.ModelState.ContainsKey("SponsorFullName") && Html.ViewData.ModelState["SponsorFullName"].Errors.Count > 0 ? "govuk-form-group--error" : "")">
                        <label class="govuk-label govuk-label--m" for="event-name">
                            Full name of application sponsor
                        </label>
                        @Html.ValidationMessageFor(m => m.SponsorFullName, "", new { @class = "govuk-error-message" })
                        @Html.TextBoxFor(m => m.SponsorFullName, new { @class = "govuk-input", id = "event-name", name = "eventName" })
                    </div>

                    <div class="govuk-form-group @(Html.ViewData.ModelState.ContainsKey("SponsorJobTitle") && Html.ViewData.ModelState["SponsorJobTitle"].Errors.Count > 0 ? "govuk-form-group--error" : "")">
                        <label class="govuk-label govuk-label--m" for="event-name">
                            Job title of application sponsor
                        </label>
                        @Html.ValidationMessageFor(m => m.SponsorJobTitle, "", new { @class = "govuk-error-message" })
                        @Html.TextBoxFor(m => m.SponsorJobTitle, new { @class = "govuk-input", id = "event-name", name = "eventName" })
                    </div>

               

                    <div class="govuk-form-group @(Html.ViewData.ModelState.ContainsKey("SponsorEmail") && Html.ViewData.ModelState["SponsorEmail"].Errors.Count > 0 ? "govuk-form-group--error" : "")">
                        <label class="govuk-label govuk-label--m" for="event-name">
                            Email address of application sponsor
                        </label>
                        @Html.ValidationMessageFor(m => m.SponsorEmail, "", new { @class = "govuk-error-message" })
                        @Html.TextBoxFor(m => m.SponsorEmail, new { @class = "govuk-input", id = "event-name", name = "eventName" })
                    </div>
                   

                    <div class="govuk-form-group @(Html.ViewData.ModelState.ContainsKey("SponsorTelephoneNumber") && Html.ViewData.ModelState["SponsorTelephoneNumber"].Errors.Count > 0 ? "govuk-form-group--error" : "")">
                        <label class="govuk-label govuk-label--m" for="event-name">
                            Telephone number of application sponsor
                        </label>
                        @Html.ValidationMessageFor(m => m.SponsorTelephoneNumber, "", new { @class = "govuk-error-message" })
                        @Html.TextBoxFor(m => m.SponsorTelephoneNumber, new { @class = "govuk-input govuk-input--width-10", id = "event-name", name = "eventName" })
                    </div>             



                    <div class="govuk-form-group">
                        <span class="govuk-caption-l">Please provide your contact details.</span>
                    </div>



                    <div class="govuk-form-group @(Html.ViewData.ModelState.ContainsKey("FullName") && Html.ViewData.ModelState["FullName"].Errors.Count > 0 ? "govuk-form-group--error" : "")">
                        <label class="govuk-label govuk-label--m" for="event-name">
                            Full name of application sponsor
                        </label>
                        @Html.ValidationMessageFor(m => m.ContactViewModel.FullName, "", new { @class = "govuk-error-message" })
                        @Html.TextBoxFor(m => m.ContactViewModel.FullName, new { @class = "govuk-input", id = "event-name", name = "eventName" })
                    </div>



                   

                    <div class="govuk-form-group @(Html.ViewData.ModelState.ContainsKey("JobTitle") && Html.ViewData.ModelState["JobTitle"].Errors.Count > 0 ? "govuk-form-group--error" : "")">
                        <label class="govuk-label govuk-label--m" for="event-name">
                            Job title of application sponsor
                        </label>
                        @Html.ValidationMessageFor(m => m.ContactViewModel.JobTitle, "", new { @class = "govuk-error-message" })
                        @Html.TextBoxFor(m => m.ContactViewModel.JobTitle, new { @class = "govuk-input", id = "event-name", name = "eventName" })
                    </div>

                 

                    <div class="govuk-form-group @(Html.ViewData.ModelState.ContainsKey("Email") && Html.ViewData.ModelState["Email"].Errors.Count > 0 ? "govuk-form-group--error" : "")">
                        <label class="govuk-label govuk-label--m" for="event-name">
                            Email address of application sponsor
                        </label>
                        @Html.ValidationMessageFor(m => m.ContactViewModel.Email, "", new { @class = "govuk-error-message" })
                        @Html.TextBoxFor(m => m.ContactViewModel.Email, new { @class = "govuk-input", id = "event-name", name = "eventName" })
                    </div>
                  

                    <div class="govuk-form-group @(Html.ViewData.ModelState.ContainsKey("TelephoneNumber") && Html.ViewData.ModelState["TelephoneNumber"].Errors.Count > 0 ? "govuk-form-group--error" : "")">
                        <label class="govuk-label govuk-label--m" for="event-name">
                            Telephone number of application sponsor
                        </label>
                        @Html.ValidationMessageFor(m => m.ContactViewModel.TelephoneNumber, "", new { @class = "govuk-error-message" })
                        @Html.TextBoxFor(m => m.ContactViewModel.TelephoneNumber, new { @class = "govuk-input govuk-input--width-10", id = "event-name", name = "eventName" })
                    </div>               

                   
                    <button type="submit" class="govuk-button" data-module="govuk-button">
                        Continue
                    </button>
                </div>
            </div>
        </main>
    </div>
}

