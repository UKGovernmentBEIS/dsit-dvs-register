@using DVSRegister.CommonUtility.Models.Enums;
@model ConsentViewModel
@{
    ViewData["Title"] = "You are about to agree to proceed with your application to the register of digital identity and attribute services";
    Layout = "~/Views/Shared/_LayoutConsentPages.cshtml";
}

@{
    ViewData["HidePublishStatus"] = true;// setting variable to hide status field in partial view

}
@using (Html.BeginForm("ProceedApplicationGiveConsent", "Consent", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m.token)
   
    <div class="govuk-width-container">
      
        <main id="main-content" class="govuk-main-wrapper" role="main">
            <div class="govuk-grid-row">

                <div class="govuk-grid-column-full">
                    @if (ViewData.ModelState.ErrorCount >0)
                    {
                        ViewData["Title"] = "Error: " + ViewData["Title"];
                        @await Html.PartialAsync("~/Views/PartialViews/_ErrorSummaryView.cshtml", Model)
                    }
                    <h1 class="govuk-heading-xl">
                        You are about to agree to proceed with your application to join the register of digital identity and attribute services</h1>
                    <p class="govuk-body">
                        To give your agreement, please select ‘I agree to proceed with my application
                        to join the register of digital identity and attribute services’ and select
                        ‘Confirm’ to continue.
                    </p>
                    <h2 class="govuk-heading-m">Basic information</h2>
                    <dl class="govuk-summary-list govuk-!-margin-bottom-8">
                        <div class="govuk-summary-list__row">
                            <dt class="govuk-summary-list__key">
                                Public contact email
                            </dt>
                            <dd class="govuk-summary-list__value">
                                @Html.DisplayFor(model => model.Service.Provider.PublicContactEmail)
                            </dd>
                        </div>
                        <div class="govuk-summary-list__row">
                            <dt class="govuk-summary-list__key">
                                Telephone number
                            </dt>
                            <dd class="govuk-summary-list__value">
                                @Html.DisplayFor(model => model.Service.Provider.PublicContactEmail)
                            </dd>
                        </div>
                        <div class="govuk-summary-list__row">
                            <dt class="govuk-summary-list__key">
                                Website address
                            </dt>
                            <dd class="govuk-summary-list__value">
                                @Model.Service.Provider.ProviderWebsiteAddress
                            </dd>
                        </div>
                    </dl>



                    <h2 class="govuk-heading-m">Certificate information </h2>
                   
                    @await Html.PartialAsync("~/Views/Consent/PartialViews/_ServiceDetailsView.cshtml", Model.Service)



                    @if (@Model.Service.ServiceSupSchemeMapping != null && @Model.Service.ServiceSupSchemeMapping.Count > 0)
                    {
                        if ((@Model.Service.ServiceSupSchemeMapping.Any(mapping => mapping.SchemeGPG44Mapping != null && mapping.SchemeGPG44Mapping.Count > 0))
                        || (@Model.Service.ServiceSupSchemeMapping.Any(mapping => mapping.SchemeGPG45Mapping != null && mapping.SchemeGPG45Mapping.Count > 0)))
                        {
                           
                                <h3 class="govuk-heading-m">Supplementary codes</h3>

                                @await Html.PartialAsync("~/Views/PartialViews/_SchemeMappingView.cshtml", Model.Service)
                          
                        }
                    }

                    @if (Model.Service.ServiceType == ServiceTypeEnum.WhiteLabelled)
                    {
                   
                            @await Html.PartialAsync("~/Views/PartialViews/_UnderpinningServiceDetailsView.cshtml", Model.Service)
                      
                    }


                    <hr class="govuk-section-break govuk-section-break--m">              



                    @await Html.PartialAsync("~/Views/PartialViews/_CheckBoxView.cshtml", new ConsentCheckBoxViewModel
                   {
                        PropertyName = "HasConsent",
                        Value = Model.HasConsent,
                        HasError = Html.ViewData.ModelState.ContainsKey("HasConsent") && Html.ViewData.ModelState["HasConsent"].Errors.Count > 0,
                        ErrorMessage = Html.ViewData.ModelState.ContainsKey("HasConsent") && Html.ViewData.ModelState["HasConsent"].Errors.Count > 0 ?
                        Html.ViewData.ModelState["HasConsent"].Errors[0].ErrorMessage : string.Empty,
                        Label = "I agree to proceed with my application to join the register of digital identity and attribute services"
                     
                   })
                    <div class="govuk-button-group" id="submitvalidation">
                        <button type="submit" class="govuk-button" data-module="govuk-button" name="confirm" value="approve">
                            Confirm
                        </button>
                    </div>
                  
                </div>
            </div>
        </main>
    </div>


}


