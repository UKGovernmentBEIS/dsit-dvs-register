@using DVSRegister.CommonUtility
@using DVSRegister.Extensions;
@using DVSRegister.BusinessLogic.Models.CAB;
@using DVSRegister.CommonUtility.Models;
@model ServiceDto


@{
    bool hidePublishStatus = ViewData["HidePublishStatus"] as bool? ?? false;
    bool is0_4GammaVersion = Model?.TrustFrameworkVersion.Version == Constants.TFVersion0_4;
}

<dl class="govuk-summary-list govuk-!-margin-bottom-8">

    @if (!hidePublishStatus)
    {
        <div class="govuk-summary-list__row">
            <dt class="govuk-summary-list__key">
                Publication status
            </dt>

            <dd class="govuk-summary-list__value">
                @HtmlExtensions.ToStyledStrongTag(Model.ServiceStatus)
            </dd>
        </div>
    }

    <div class="govuk-summary-list__row">
        <dt class="govuk-summary-list__key">
            Registered name
        </dt>
        <dd class="govuk-summary-list__value">
            @Model.Provider.RegisteredName
        </dd>
    </div>
    <div class="govuk-summary-list__row">
        <dt class="govuk-summary-list__key">
            Trading names
        </dt>
        <dd class="govuk-summary-list__value">
            @Html.DisplayFor(model => model.Provider.TradingName)
        </dd>
    </div>
    <div class="govuk-summary-list__row">
        <dt class="govuk-summary-list__key">
            Company address details
        </dt>
        <dd class="govuk-summary-list__value">
            @HtmlExtensions.ToStringWithLineBreaks(Model.CompanyAddress)
        </dd>
    </div>
    <div class="govuk-summary-list__row">
        <dt class="govuk-summary-list__key">
            Trust framework version
        </dt>
        <dd class="govuk-summary-list__value">
            @Model.TrustFrameworkVersion.TrustFrameworkName
        </dd>
    </div>
    <div class="govuk-summary-list__row">
        <dt class="govuk-summary-list__key">
            Name of service
        </dt>
        <dd class="govuk-summary-list__value">
            @Model.ServiceName
        </dd>
    </div>
    <div class="govuk-summary-list__row">
        <dt class="govuk-summary-list__key">
            URL link to the service
        </dt>
        <dd class="govuk-summary-list__value">
            @Model.WebSiteAddress
        </dd>
    </div>
    <div class="govuk-summary-list__row">
        <dt class="govuk-summary-list__key">
            Roles certified against
        </dt>
        <dd class="govuk-summary-list__value">
            @foreach (var item in Model.ServiceRoleMapping)
            {
                <div>@item.Role.RoleName</div>
            }
        </dd>
    </div>

    @if (is0_4GammaVersion)
    {
        <div class="govuk-summary-list__row">
            <dt class="govuk-summary-list__key">
                Underpinning or white-labelled service
            </dt>
            <dd class="govuk-summary-list__value">
                @ViewModelHelper.GetServiceType(Model.ServiceType)
            </dd>
        </div>

        <div class="govuk-summary-list__row">
            <dt class="govuk-summary-list__key">
                GPG 45 identity profiles
            </dt>
            <dd class="govuk-summary-list__value">
                @if (Model?.ServiceIdentityProfileMapping?.Count > 0)
                {
                    var groupedProfiles = Model.ServiceIdentityProfileMapping
                    .GroupBy(profile => profile.IdentityProfile.IdentityProfileType)
                    .ToDictionary(group => group.Key, group => group.ToList())
                    .OrderBy(g => g.Key);

                    foreach (var group in groupedProfiles)
                    {
                        <strong>@group.Key</strong>
                        <br>
                        foreach (var item in group.Value.OrderBy(c => c.IdentityProfile.IdentityProfileName))
                        {
                            @item.IdentityProfile.IdentityProfileName
                            <br>
                        }
                        <br>
                    }
                }
                else
                {
                    <div>@Constants.NullFieldsDisplay</div>
                }
            </dd>
        </div>
    }    

    <div class="govuk-summary-list__row">
        <dt class="govuk-summary-list__key">
            GPG 44 quality of authenticator
        </dt>
        <dd class="govuk-summary-list__value">
            @if (Model.ServiceQualityLevelMapping.Any(x => x.QualityLevel.QualityType == QualityTypeEnum.Authentication))
            {
                @foreach (var item in Model.ServiceQualityLevelMapping.Where(x => x.QualityLevel.QualityType == QualityTypeEnum.Authentication))
                {
                    <div>@item.QualityLevel.Level</div>
                }
            }
            else
            {
                <div>@Constants.NullFieldsDisplay</div>
            }
        </dd>
    </div>

    <div class="govuk-summary-list__row">
        <dt class="govuk-summary-list__key">
            GPG 44 level of protection
        </dt>
        <dd class="govuk-summary-list__value">
            @if (Model.ServiceQualityLevelMapping.Any(x => x.QualityLevel.QualityType == QualityTypeEnum.Protection))
            {
                @foreach (var item in Model.ServiceQualityLevelMapping.Where(x => x.QualityLevel.QualityType == QualityTypeEnum.Protection))
                {
                    <div>@item.QualityLevel.Level</div>
                }
            }
            else
            {
                <div>@Constants.NullFieldsDisplay</div>
            }
        </dd>
    </div>

    @if (!is0_4GammaVersion)
    {
        <div class="govuk-summary-list__row">
            <dt class="govuk-summary-list__key">
                GPG 45 identity profiles
            </dt>
            <dd class="govuk-summary-list__value">
                @if (Model.ServiceIdentityProfileMapping != null && Model.ServiceIdentityProfileMapping.Any())
                {
                    @foreach (var item in Model.ServiceIdentityProfileMapping)
                    {
                        <div>@item.IdentityProfile.IdentityProfileName</div>
                    }
                }
                else
                {
                    <div>@Constants.NullFieldsDisplay</div>
                }
            </dd>
        </div>        
    }

    <div class="govuk-summary-list__row">
        <dt class="govuk-summary-list__key">
            Supplementary codes
        </dt>
        <dd class="govuk-summary-list__value">
            @if (Model.ServiceSupSchemeMapping.Any())
            {
                @foreach (var item in Model.ServiceSupSchemeMapping)
                {
                    <div>@item.SupplementaryScheme.SchemeName</div>
                }
            }
            else
            {
                <div>@Constants.NullFieldsDisplay</div>
            }
        </dd>
    </div>
    <div class="govuk-summary-list__row">
        <dt class="govuk-summary-list__key">
            Certificate
            of conformity
        </dt>
        <dd class="govuk-summary-list__value">
            @Model.FileName
        </dd>
    </div>
    <div class="govuk-summary-list__row">
        <dt class="govuk-summary-list__key">
            Date of issue
        </dt>
        <dd class="govuk-summary-list__value">
            @DateTimeExtensions.FormatDateTime(@Model.ConformityIssueDate, "dd MMMM yyyy")
        </dd>
    </div>
    <div class="govuk-summary-list__row">
        <dt class="govuk-summary-list__key">
            Date of expiry
        </dt>
        <dd class="govuk-summary-list__value">
            @DateTimeExtensions.FormatDateTime(@Model.ConformityExpiryDate, "dd MMMM yyyy")
        </dd>
    </div>
</dl>

@if (is0_4GammaVersion)
{
    @if (Model?.ServiceSupSchemeMapping != null && Model.ServiceSupSchemeMapping.Count > 0)
    {

        <h2 class="govuk-heading-m">Supplementary codes</h2>

        @foreach (var schemeMapping in Model.ServiceSupSchemeMapping)
        {
            <hr class="govuk-section-break govuk-section-break--m">
            <h3 class="govuk-heading-s">
                @schemeMapping.SupplementaryScheme.SchemeName
            </h3>
            <dl class="govuk-summary-list govuk-!-margin-bottom-8">

                        <div class="govuk-summary-list__row">
                            <dt class="govuk-summary-list__key">
                                GPG 45 identity profiles
                            </dt>
                            <dd class="govuk-summary-list__value">

                                @if (schemeMapping.SchemeGPG45Mapping != null && schemeMapping.SchemeGPG45Mapping.Count > 0)
                                {
                                    var groupedProfiles = schemeMapping.SchemeGPG45Mapping
                                    .GroupBy(profile => profile.IdentityProfile.IdentityProfileType)
                                    .ToDictionary(group => group.Key, group => group.ToList())
                                    .OrderBy(g => g.Key);

                                    foreach (var group in groupedProfiles)
                                    {
                                        <strong>@group.Key</strong>
                                        <br>
                                        foreach (var identity in group.Value.OrderBy(c => c.IdentityProfile.IdentityProfileName))
                                        {
                                            @identity.IdentityProfile.IdentityProfileName
                                            <br>
                                        }
                                        <br>
                                    }
                                }
                            </dd>
                        </div>


                        <div class="govuk-summary-list__row">
                            <dt class="govuk-summary-list__key">
                                GPG 44 quality of authentication
                            </dt>
                            <dd class="govuk-summary-list__value">
                                @if (schemeMapping.SchemeGPG44Mapping != null && schemeMapping.SchemeGPG44Mapping.Count > 0)
                                {
                                    @foreach (var item in schemeMapping.SchemeGPG44Mapping.Where(x => x.QualityLevel.QualityType == QualityTypeEnum.Authentication))
                                    {
                                        @item.QualityLevel.Level
                                        <br>
                                    }
                                }
                                else
                                {
                                    <div>@Constants.NullFieldsDisplay</div>

                                }
                            </dd>

                        </div>

                        <div class="govuk-summary-list__row">
                            <dt class="govuk-summary-list__key">
                                GPG 44 quality of protection
                            </dt>
                            <dd class="govuk-summary-list__value">
                                @if (schemeMapping.SchemeGPG44Mapping != null && schemeMapping.SchemeGPG44Mapping.Count > 0)
                                {
                                    @foreach (var item in schemeMapping.SchemeGPG44Mapping.Where(x => x.QualityLevel.QualityType == QualityTypeEnum.Protection))
                                    {
                                        @item.QualityLevel.Level
                                        <br>
                                    }
                                }
                                else
                                {
                                    <div>@Constants.NullFieldsDisplay</div>
                                }
                            </dd>
                        </div>
                    </dl>
        }
    }

    @if (Model.UnderPinningService == null && Model.ManualUnderPinningService != null)
    {
        <div class="govuk-summary-card">
            <div class="govuk-summary-card__title-wrapper">
                <h2 class="govuk-summary-card__title">
                    Underpinning service
                </h2>
            </div>
            <div class="govuk-summary-card__content">
                <dl class="govuk-summary-list">

                    <div class="govuk-summary-list__row">
                        <dt class="govuk-summary-list__key">
                            Service name
                        </dt>
                        <dd class="govuk-summary-list__value">
                            @Model?.ManualUnderPinningService?.ServiceName
                        </dd>
                    </div>

                    <div class="govuk-summary-list__row">
                        <dt class="govuk-summary-list__key">
                            Service provider
                        </dt>
                        <dd class="govuk-summary-list__value">
                                @Model.ManualUnderPinningService.ProviderName
                        </dd>
                    </div>

                    <div class="govuk-summary-list__row">
                        <dt class="govuk-summary-list__key">
                            CAB of underpinning service
                        </dt>
                        <dd class="govuk-summary-list__value">
                                @Model.ManualUnderPinningService.Cab.CabName
                        </dd>
                    </div>

                    <div class="govuk-summary-list__row">
                        <dt class="govuk-summary-list__key">
                            Underpinning service <br /> certificate expiry date
                        </dt>
                        <dd class="govuk-summary-list__value">
                            @DateTimeExtensions.FormatDateTime(Model.ManualUnderPinningService.CertificateExpiryDate, "dd MMM yyyy")
                        </dd>
                    </div>

                </dl>
            </div>
        </div>
    }

    else if (Model.ManualUnderPinningService == null && Model.UnderPinningService != null)
    {
        <div class="govuk-summary-card">
            <div class="govuk-summary-card__title-wrapper">
                <h2 class="govuk-summary-card__title">
                    Underpinning service
                </h2>
            </div>
            <div class="govuk-summary-card__content">
                <dl class="govuk-summary-list">

                    <div class="govuk-summary-list__row">
                        <dt class="govuk-summary-list__key">
                            Service name
                        </dt>
                        <dd class="govuk-summary-list__value">
                            @Model.UnderPinningService.ServiceName
                        </dd>
                    </div>

                    <div class="govuk-summary-list__row">
                        <dt class="govuk-summary-list__key">
                            Service provider
                        </dt>
                        <dd class="govuk-summary-list__value">
                            @Model.UnderPinningService.Provider.RegisteredName
                        </dd>
                    </div>

                    <div class="govuk-summary-list__row">
                        <dt class="govuk-summary-list__key">
                            CAB of underpinning service
                        </dt>
                        <dd class="govuk-summary-list__value">
                            @Model.UnderPinningService.CabUser.Cab.CabName
                        </dd>
                    </div>

                    <div class="govuk-summary-list__row">
                        <dt class="govuk-summary-list__key">
                            Underpinning service <br /> certificate expiry date
                        </dt>
                        <dd class="govuk-summary-list__value">
                                @DateTimeExtensions.FormatDateTime(Model.UnderPinningService.ConformityExpiryDate, "dd MMM yyyy")
                        </dd>
                    </div>
                </dl>
            </div>
        </div>
    }
}


