@model DVSRegister.Models.CAB.RoleViewModel
@{
    ViewData["Title"] = "Select the applicable roles from the UK digital identity and attributes trust framework for this service";
    Layout = "~/Views/Shared/_LayoutLoggedIn.cshtml";
}
@{
    bool hasError = false;
    int index = 0;
}

<div class="govuk-width-container">
    @Html.ActionLink("Back", "CompanyAddress", "CabService", null, new { @class = "govuk-back-link" })
    <main id="main-content" class="govuk-main-wrapper" role="main">
        <div class="govuk-grid-row">

            @using (Html.BeginForm("SaveRoles", "CabService", FormMethod.Post))
             {
                 <div class="govuk-grid-column-two-thirds">
                <h1 class="govuk-heading-xl">
                    Select the applicable roles from the UK digital identity and attributes trust framework for this service
                </h1>
                @Html.HiddenFor(m => m.FromSummaryPage, new { @Value = ViewBag.fromSummaryPage })
                @if (ViewData.ModelState.ErrorCount > 0)
                {
                    hasError = true;
                    ViewData["Title"] = "Error: " + ViewData["Title"];
                    @await Html.PartialAsync("~/Views/PartialViews/_ErrorSummaryView.cshtml", Model)
                }              
                <p class="govuk-body">
                    This must match the information on the certificate of conformity.
                </p>

                @if (hasError)
                {
                    <div class="govuk-form-group govuk-form-group--error">
                        <fieldset class="govuk-fieldset" aria-describedby="selectedroleids-hint selectedroleids-error">
                            <legend class="govuk-fieldset__legend govuk-fieldset__legend--s">
                                Select the roles
                            </legend>
                            <div id="selectedroleids-hint" class="govuk-hint">
                                Select all that apply
                            </div>
                            <p id="selectedroleids-error" class="govuk-error-message">
                                <span class="govuk-visually-hidden">Error:</span>
                                    @Html.ValidationMessageFor(m => m.SelectedRoleIds, "", new { @class = "govuk-error-message" })
                            </p>
                            <div class="govuk-checkboxes" data-module="govuk-checkboxes">
                                @foreach (var role in Model.AvailableRoles)
                                {
                                    var idSuffix = index > 0 ? $"_{index}" : string.Empty; // added to make the first checkbox id as selectedroleids so that error summary ahref refers first item
                                    <div class="govuk-checkboxes__item">
                                    <input class="govuk-checkboxes__input" type="checkbox" name="SelectedRoleIds" value="@role.Id" id="selectedroleids@(idSuffix)"
                                    @(Model.SelectedRoleIds.Contains(role.Id) ? "checked" : "") />
                                    <label class="govuk-label govuk-checkboxes__label" for="selectedroleids@(idSuffix)">@role.RoleName</label>
                                     </div>
                                    index++;
                                }
                            </div>

                        </fieldset>
                    </div>
                }
                else
                {
                    <div class="govuk-form-group">
                        <fieldset class="govuk-fieldset" aria-describedby="selectedroleids-hint">
                            <legend class="govuk-fieldset__legend govuk-fieldset__legend--s">
                                Select the roles
                            </legend>
                            <div id="selectedroleids-hint" class="govuk-hint">
                                Select all that apply
                            </div>

                            <div class="govuk-checkboxes" data-module="govuk-checkboxes">
                                @foreach (var role in Model.AvailableRoles)
                                {
                                    <div class="govuk-checkboxes__item">
                                        <input class="govuk-checkboxes__input" type="checkbox" name="SelectedRoleIds" value="@role.Id" id="role_@role.Id"
                                        @(Model.SelectedRoleIds.Contains(role.Id) ? "checked" : "") />
                                        <label class="govuk-label govuk-checkboxes__label" for="role_@role.Id">@role.RoleName</label>
                                    </div>
                                }
                            </div>
                        </fieldset>
                    </div>
                }
            
                    <button type="submit" class="govuk-button govuk-!-margin-top-6" data-module="govuk-button" name="action"  value="continue">
                    Continue
                </button>
                    <button type="submit" role="link" class="govuk-link" name="action" value="draft">  Save and continue </button>
            </div>
            }
        </div>
    </main>
</div>

