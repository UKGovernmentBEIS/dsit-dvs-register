@model DVSRegister.Models.DateViewModel
@{
    ViewData["Title"] = "Certificate Confirmity Issue Date";
    Layout = "~/Views/Shared/_LayoutLoggedIn.cshtml";
}

@{
    bool hasError = false;
    bool hasDateError = false;
    bool hasDayError = false;
    bool hasMonthError = false;
    bool hasYearError = false;
}

<div class="govuk-width-container">
    @Html.ActionLink("Back", "CertificateUploadPage", "CabService", null, new { @class = "govuk-back-link" })
    <main class="govuk-main-wrapper">
        <div class="govuk-grid-row">
            <div class="govuk-grid-column-two-thirds">

                <h1 class="govuk-heading-xl">
                    Certificate of conformity issue date
                </h1>
                @if (ViewData.ModelState.ErrorCount >0)
                {
                    hasError = true;
                    ViewData["Title"] = "Error: " + ViewData["Title"];            

                    @await Html.PartialAsync("~/Views/PartialViews/_DateErrorSummaryView.cshtml", Model)


                    if ((Html.ViewData.ModelState.ContainsKey("ValidDate") &&   Html?.ViewData?.ModelState["ValidDate"]?.Errors.Count > 0))
                    {
                        hasDateError = true; hasDayError = true; hasMonthError = true; hasYearError = true;
                    }
                    if ((Html.ViewData.ModelState.ContainsKey("Day") && Html?.ViewData?.ModelState["Day"]?.Errors.Count > 0))
                    {
                        hasDayError = true;
                    }

                    if ((Html.ViewData.ModelState.ContainsKey("Month") && Html?.ViewData?.ModelState["Month"]?.Errors.Count > 0))
                    {
                        hasMonthError = true;
                    }
                    if ((Html.ViewData.ModelState.ContainsKey("Year") && Html?.ViewData?.ModelState["Year"]?.Errors.Count > 0))
                    {
                        hasYearError = true;
                    }
                }

                @using (Html.BeginForm("SaveConfirmityIssueDate", "CabService", FormMethod.Post))
                {
                    @Html.HiddenFor(m => m.FromSummaryPage, new { @Value = ViewBag.fromSummaryPage })                   
                    <p class="govuk-body">
                        This must match the date on the certificate of conformity. The issue date cannot be greater
                        than today.
                    </p>


                    var conformityissueDateViewModel = new DateInputViewModel
                {
                    PropertyName = "ConfirmityIssueDate",
                    HasError = hasError,
                    ErrorMessage = hasDateError? Html?.ViewData?.ModelState["ValidDate"]?.Errors[0].ErrorMessage ?? string.Empty:string.Empty,
                    FieldsetLegend = "Certificate of conformity issue date",
                    Hint = "For example, 27 3 2007",

                    Day = Convert.ToString(Model.Day)??string.Empty,
                    HasDayError = hasDayError,
                    DayError = !hasDateError & hasDayError ? Html?.ViewData?.ModelState["Day"]?.Errors[0].ErrorMessage ?? string.Empty : string.Empty,

                    Month = Convert.ToString(Model.Month)??string.Empty,
                    HasMonthError = hasMonthError,
                    MonthError = !hasDateError & hasMonthError ? Html?.ViewData?.ModelState["Month"]?.Errors[0].ErrorMessage ?? string.Empty : string.Empty,

                    Year = Convert.ToString(Model.Year)??string.Empty,
                    HasYearError = hasYearError,
                    YearError =  !hasDateError & hasYearError ? Html?.ViewData?.ModelState["Year"]?.Errors[0].ErrorMessage ?? string.Empty : string.Empty
                 };

                    @await Html.PartialAsync("~/Views/PartialViews/_DateView.cshtml", conformityissueDateViewModel)

                    <button type="submit" class="govuk-button govuk-!-margin-top-2" data-module="govuk-button">
                        Continue
                    </button>
                }
            </div>
        </div>
    </main>
</div>

