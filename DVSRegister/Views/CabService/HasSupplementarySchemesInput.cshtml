@model DVSRegister.Models.CAB.ServiceSummaryViewModel
@using DVSRegister.Models.UI.Enums
@{
    ViewData["Title"] = "Is the service certified against any supplementary codes?";
    Layout = "~/Views/Shared/_LayoutLoggedIn.cshtml";
}
@{
    bool hasError = false;
    string refererUrl = Convert.ToString(ViewBag.RefererUrl);
}


<div class="govuk-width-container">
    <a href="@refererUrl" class="govuk-back-link">
        Back
    </a>

    @using (Html.BeginForm("SaveHasSupplementarySchemesInput", "CabService", FormMethod.Post))
    {
        @Html.HiddenFor(m => m.FromSummaryPage, new { @Value = ViewBag.fromSummaryPage })
        @Html.HiddenFor(m => m.FromDetailsPage, new { @Value = ViewBag.fromDetailsPage })
        <main id="main-content" class="govuk-main-wrapper" role="main">
        <div class="govuk-grid-row">
            <div class="govuk-grid-column-two-thirds">

                    @if (Html.ViewData?.ModelState.ContainsKey("HasSupplementarySchemes") == true)
                    {
                        hasError = true;
                        var errors = Html.ViewData?.ModelState["HasSupplementarySchemes"]?.Errors;
                        if (errors != null && errors.Count > 0)
                        {
                            hasError = true;
                            ViewData["Title"] = "Error: " + ViewData["Title"];
                            @await Html.PartialAsync("~/Views/PartialViews/_SpecificErrorsView.cshtml",
                                     new Tuple<string, IEnumerable<Microsoft.AspNetCore.Mvc.ModelBinding.ModelError>>("HasSupplementarySchemes", errors))
                        }

                    }             

                   
                @await Html.PartialAsync("~/Views/PartialViews/_TwoRadioButtonGroupView.cshtml", new TwoRadioButtonGroupViewModel
                 {
                    PropertyName = "HasSupplementarySchemes",
                    Value = Model.HasSupplementarySchemes,
                    HasError = hasError,
                    FieldSet = "Is the service certified against any supplementary codes?",
                    Heading = HeadingEnum.H1,
                    LegendStyleClass = "govuk-fieldset__legend--xl",
                    ErrorMessage = hasError ?
                    Html.ViewData.ModelState["HasSupplementarySchemes"].Errors[0].ErrorMessage : string.Empty,
                    Label1 = "Yes",
                    Label2 = "No"
                 })

                    @if (Model != null && Model.IsAmendment)
                    {
                        <div class="govuk-button-group">
                            <button type="submit" class="govuk-button govuk-!-margin-top-2" name="action" value="amend">Save changes</button>
                            <a href="@refererUrl" class="govuk-button govuk-button--secondary" role="button" draggable="false" data-module="govuk-button">
                                Cancel
                            </a>
                        </div>
                    }
                    else
                    {
                        <div class="govuk-button-group">
                            <button type="submit" class="govuk-button govuk-!-margin-top-2" name="action" value="continue">Continue</button>
                            <button type="submit" role="link" class="govuk-button govuk-button--secondary" name="action" value="draft">  Save and complete later </button>
                        </div>
                    }
            </div>
        </div>
    </main>
    }
</div>
