@model ProviderDetailsViewModel
@using DVSRegister.Extensions;
@using DVSRegister.CommonUtility.Models.Enums;
@using DVSRegister.CommonUtility.Models;
@{
    ViewData["Title"] = "Provider details";
    Layout = "~/Views/Shared/_Layout_Register.cshtml";
    
    var notificationBanner = new NotificationBannerViewModel
    {
        Title = "Important",
        Heading = "This is a new service and some records are still being updated.",
        HtmlContent = @"
        <p class=""govuk-body"">
            You should check the expiry date for each certificate of conformity to confirm that the service is still 
            registered. You can also <a class=""govuk-notification-banner__link"" 
            href=""https://www.gov.uk/government/publications/list-of-certified-digital-identity-and-attribute-services""> 
            access the previous list of certified digital identity and attribute services</a> to download an up to date list of registered services.
        </p>".Trim()
    };
}

<div class="govuk-width-container">
    @Html.ActionLink("Back", "Register", "Register", new { FromDetailsPage = true }, new { @class = "govuk-back-link" })

    <main id="main-content" class="govuk-main-wrapper" role="main">
        <div class="govuk-grid-row">

            <div class="govuk-grid-column-full">
                <h1 class="govuk-heading-xl govuk-!-margin-bottom-6">
                    @Model.Provider.RegisteredName
                    <span class="govuk-caption-m">Last updated @DateTimeExtensions.FormatDateTime(@Model.Provider.PublishedTime) (GMT)</span>
                </h1>
                @if (!string.IsNullOrEmpty(Model.Provider.TradingName))
                {
                    <p class="govuk-body-l govuk-!-margin-bottom-7">Trading name: @Model.Provider.TradingName</p>
                }
                                                      
                <h2 class="govuk-heading-m">Provider information</h2>
                <hr class="govuk-section-break govuk-section-break--visible">
                <dl class="govuk-summary-list govuk-!-margin-bottom-8">
                    <div class="govuk-summary-list__row">
                        <dt class="govuk-summary-list__key">
                            Public email address
                        </dt>
                        <dd class="govuk-summary-list__value">
                            @if (!string.IsNullOrEmpty(Model.Provider.PublicContactEmail))
                            {
                                <div> @Model.Provider.PublicContactEmail </div>
                            }
                            else
                            {
                                <div>No public email address</div>
                            }
                        </dd>
                    </div>
                    <div class="govuk-summary-list__row">
                        <dt class="govuk-summary-list__key">
                            Public telephone number
                        </dt>
                        <dd class="govuk-summary-list__value">
                            @if (!string.IsNullOrEmpty(Model.Provider.ProviderTelephoneNumber))
                            {
                               <div> @Model.Provider.ProviderTelephoneNumber </div>
                            }
                            else
                            {
                                <div>No public telephone number</div>
                            }
                        </dd>
                    </div>
                    <div class="govuk-summary-list__row">
                        <dt class="govuk-summary-list__key">
                            Website address
                        </dt>
                        <dd class="govuk-summary-list__value">
                            @Model.Provider.ProviderWebsiteAddress
                        </dd>
                    </div>
                </dl>


                @foreach (var service in Model.Provider.Services)
                {
                    <h2 class="govuk-heading-m">Service details: @service.ServiceName</h2>
                    <hr class="govuk-section-break govuk-section-break--visible">
                    <dl class="govuk-summary-list govuk-!-margin-bottom-8">
                        <div class="govuk-summary-list__row">
                            <dt class="govuk-summary-list__key">
                                Name of service
                            </dt>
                            <dd class="govuk-summary-list__value">
                                @service.ServiceName
                            </dd>
                        </div>
                        <div class="govuk-summary-list__row">
                            <dt class="govuk-summary-list__key">
                                Company address details
                            </dt>
                            <dd class="govuk-summary-list__value">
                                @HtmlExtensions.ToStringWithLineBreaks(@service.CompanyAddress)
                            </dd>
                        </div>
                        <div class="govuk-summary-list__row">
                            <dt class="govuk-summary-list__key">
                                Roles certified against
                            </dt>
                            <dd class="govuk-summary-list__value">
                                @foreach (var item in service.ServiceRoleMapping)
                                {
                                    <div>@Enum.GetName(typeof(RoleEnum), item.RoleId)</div>
                                }
                            </dd>
                        </div>
                        <div class="govuk-summary-list__row">
                            <dt class="govuk-summary-list__key">
                                GPG44 quality of authenticator
                            </dt>
                            <dd class="govuk-summary-list__value">
                                @if (service.ServiceQualityLevelMapping != null && service.ServiceQualityLevelMapping.Any(x => x.QualityLevel.QualityType == QualityTypeEnum.Authentication))
                                {
                                    foreach (var item in service.ServiceQualityLevelMapping.Where(x => x.QualityLevel.QualityType == QualityTypeEnum.Authentication))
                                    {
                                        <div>@item.QualityLevel.Level</div>
                                    }
                                }
                                else
                                {
                                    <div>Not certified against GPG44</div>
                                }
                            </dd>
                        </div>


                        <div class="govuk-summary-list__row">
                            <dt class="govuk-summary-list__key">
                                GPG44 level of protection
                            </dt>
                            <dd class="govuk-summary-list__value">
                                @if (service.ServiceQualityLevelMapping != null && service.ServiceQualityLevelMapping.Any(x => x.QualityLevel.QualityType == QualityTypeEnum.Protection))
                                {
                                    @foreach (var item in service.ServiceQualityLevelMapping.Where(x => x.QualityLevel.QualityType == QualityTypeEnum.Protection))
                                    {
                                        <div>@item.QualityLevel.Level</div>
                                    }
                                }
                                else
                                {
                                    <div>Not certified against GPG44</div>
                                }
                            </dd>
                        </div>

                        <div class="govuk-summary-list__row">
                            <dt class="govuk-summary-list__key">
                                GPG45 identity profiles
                            </dt>
                            <dd class="govuk-summary-list__value">
                                @if (service.ServiceIdentityProfileMapping != null && service.ServiceIdentityProfileMapping.Any()) 
                                { 
                                    @foreach (var item in service.ServiceIdentityProfileMapping) 
                                    { 
                                        <div>@item.IdentityProfile.IdentityProfileName</div> 
                                    }
                                }
                                else
                                { 
                                    <div>Not certified against GPG45</div>
                                }
                            </dd>
                        </div>


                        <div class="govuk-summary-list__row">
                            <dt class="govuk-summary-list__key">
                                Supplementary codes
                            </dt>
                            <dd class="govuk-summary-list__value">
                                @if (service.ServiceSupSchemeMapping.Any())
                                {
                                    @foreach (var item in service.ServiceSupSchemeMapping)
                                    {
                                        <div>@item.SupplementaryScheme.SchemeName</div>
                                    }
                                }
                                else
                                {
                                    <div>Not certified against any supplementary codes</div>
                                }
                            </dd>
                        </div>

                        <div class="govuk-summary-list__row">
                            <dt class="govuk-summary-list__key">
                                Certificate of conformity's date of issue
                            </dt>
                            <dd class="govuk-summary-list__value">
                                @DateTimeExtensions.FormatDateTime(@service.ConformityIssueDate, "dd MMMM yyyy")
                            </dd>
                        </div>

                        <div class="govuk-summary-list__row">
                            <dt class="govuk-summary-list__key">
                                Certificate of conformity's date of expiry
                            </dt>
                            <dd class="govuk-summary-list__value">
                                @DateTimeExtensions.FormatDateTime(@service.ConformityExpiryDate, "dd MMMM yyyy")
                            </dd>
                        </div>
                    </dl>


                    <hr class="govuk-section-break govuk-section-break--m">
                }

                <hr class="govuk-section-break govuk-section-break--m govuk-section-break--visible govuk-!-margin-bottom-7">
                <h3 class="govuk-heading-m">Explore the topic</h3>
                <ul class="govuk-list">
                    <li>
                        <a href="https://www.gov.uk/government/publications/uk-digital-identity-and-attributes-trust-framework-beta-version/uk-digital-identity-and-attributes-trust-framework-beta-version#rules-for-all-identity-and-attribute-service-providers" class="govuk-link">Role type</a>
                    </li>
                    <li>
                        <a href="https://www.gov.uk/government/publications/identity-proofing-and-verification-of-an-individual/identity-profiles" class="govuk-link">Identity profiles</a>
                    </li>
                    <li>
                        <a href="https://www.gov.uk/government/publications/digital-identity-document-validation-technology-idvt" class="govuk-link">Supplementary codes</a>
                    </li>
                </ul>

            </div>
        </div>
    </main>

</div>